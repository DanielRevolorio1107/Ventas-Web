@model VentasWeb.Models.NuevaVentaViewModel
@{
    ViewData["Title"] = "Nueva venta";
    var apiBase = Model.ApiBaseUrl;
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container py-4" data-api="@apiBase" id="venta-root">
    <h1 class="mb-4">Registrar venta</h1>

    <div class="card mb-4">
        <div class="card-body row g-3">
            <div class="col-md-6">
                <label class="form-label">Cliente</label>
                <select id="cliente" class="form-select">
                    <option value="">-- Seleccionar --</option>
                    @foreach (var c in Model.Clientes)
                    {
                        <option value="@c.Id">@c.Nombre (@c.Email)</option>
                    }
                </select>
            </div>
            <div class="col-md-6">
                <label class="form-label">Fecha</label>
                <input id="fecha" type="date" class="form-control" value="@DateTime.Today.ToString("yyyy-MM-dd")" />
            </div>
        </div>
    </div>

    <h5 class="mb-2">Productos</h5>
    <div class="table-responsive mb-4">
        <table class="table table-striped align-middle">
            <thead>
                <tr>
                    <th>Producto</th>
                    <th class="text-end">Precio</th>
                    <th class="text-end">Stock</th>
                    <th style="width:160px">Cantidad</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var p in Model.Productos)
                {
                    <tr data-id="@p.Id" data-nombre="@p.Nombre" data-precio="@p.Precio" data-stock="@p.Stock">
                        <td>@p.Nombre</td>
                        <td class="text-end">@p.Precio.ToString("C")</td>
                        <td class="text-end">@p.Stock</td>
                        <td>
                            <input type="number" min="1" max="@p.Stock" value="1" class="form-control qty" />
                        </td>
                        <td>
                            <button type="button" class="btn btn-sm btn-primary add">Agregar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <h5 class="mb-2">Carrito</h5>
    <div class="table-responsive">
        <table class="table table-bordered" id="carrito">
            <thead>
                <tr>
                    <th>Producto</th>
                    <th class="text-end">Cantidad</th>
                    <th class="text-end">Precio</th>
                    <th class="text-end">Subtotal</th>
                    <th style="width:60px"></th>
                </tr>
            </thead>
            <tbody></tbody>
            <tfoot>
                <tr>
                    <th colspan="3" class="text-end">Total</th>
                    <th class="text-end" id="total">$0.00</th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="d-flex gap-2">
        <button type="button" id="enviar" class="btn btn-success">Registrar venta</button>
        <a href="/Productos" class="btn btn-outline-secondary">Ver productos</a>
    </div>

    <div id="msg" class="mt-3"></div>
</div>

<script>
(() => {
  const root = document.getElementById('venta-root');
  const apiBase = root?.dataset.api || '';
  const tbody = document.querySelector('#carrito tbody');
  const totalEl = document.getElementById('total');
  const msg = document.getElementById('msg');
  const cart = [];

  const fmt = n => new Intl.NumberFormat('es-MX', { style: 'currency', currency: 'MXN' }).format(n);

  function render() {
    tbody.innerHTML = '';
    let total = 0;
    cart.forEach((x, i) => {
      const tr = document.createElement('tr');
      const subtotal = x.cantidad * x.precioUnitario;
      total += subtotal;
      tr.innerHTML = `
        <td>${x.nombre}</td>
        <td class="text-end">${x.cantidad}</td>
        <td class="text-end">${fmt(x.precioUnitario)}</td>
        <td class="text-end">${fmt(subtotal)}</td>
        <td><button type="button" class="btn btn-sm btn-danger del" data-i="${i}">X</button></td>`;
      tbody.appendChild(tr);
    });
    totalEl.textContent = fmt(total);
  }

  document.addEventListener('click', (e) => {
    const addBtn = e.target.closest('button.add');
    if (!addBtn) return;

    e.preventDefault();
    const tr = addBtn.closest('tr');
    const id = +tr.dataset.id;
    const nombre = tr.dataset.nombre;
    const precio = parseFloat(tr.dataset.precio);
    const stock = +tr.dataset.stock;
    const qty = +tr.querySelector('.qty').value;

    if (!qty || qty < 1) return alert('Cantidad inválida');
    if (qty > stock) return alert('Cantidad supera el stock');

    const found = cart.find(x => x.idProducto === id);
    if (found) {
      if (found.cantidad + qty > stock) return alert('Cantidad total supera el stock');
      found.cantidad += qty;
    } else {
      cart.push({ idProducto: id, nombre, cantidad: qty, precioUnitario: precio });
    }
    render();
  });

  tbody.addEventListener('click', (e) => {
    const del = e.target.closest('button.del');
    if (!del) return;
    const i = +del.dataset.i;
    cart.splice(i, 1);
    render();
  });

  document.getElementById('enviar').addEventListener('click', async () => {
    msg.innerHTML = '';
    const clienteId = +document.getElementById('cliente').value;
    const fecha = document.getElementById('fecha').value || null;

    if (!clienteId) return alert('Selecciona un cliente.');
    if (cart.length === 0) return alert('Agrega productos al carrito.');
    if (!apiBase) return msg.innerHTML = `<div class="alert alert-danger">No se encontró ApiBaseUrl en la web.</div>`;

    const body = {
      clienteId,
      fecha,
      detalles: cart.map(x => ({
        idProducto: x.idProducto,
        cantidad: x.cantidad,
        precioUnitario: x.precioUnitario
      }))
    };

    try {
      const res = await fetch(`${apiBase}/api/ventas`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(body)
      });

      if (!res.ok) throw new Error(await res.text());

      const data = await res.json();
      msg.innerHTML = `<div class="alert alert-success">Venta registrada. Id: <b>${data.id}</b>${data.total ? `, Total: <b>${data.total.toLocaleString('es-MX',{style:'currency',currency:'MXN'})}</b>` : ''}</div>`;
      cart.length = 0; render();
    } catch (err) {
      msg.innerHTML = `<div class="alert alert-danger">Error: ${err}</div>`;
      console.error(err);
    }
  });
})();
</script>
